import shutil
import os
import time
import colorama
import sys
import subprocess
import tkinter as tk
import tkinter.filedialog as tk_FileDialog
colorama.init()

class color:
    HEADER: str = '\033[95m'
    OKBLUE: str = '\033[94m'
    OKCYAN: str = '\033[96m'
    OKGREEN: str = '\033[92m'
    WARNING: str = '\033[93m'
    FAIL: str = '\033[91m'
    ENDC: str = '\033[0m'
    BOLD: str = '\033[1m'
    UNDERLINE: str = '\033[4m'

def getFileDialogTitle(msg, title):
    if msg and title:
        return "%s - %s" % (title, msg)
    if msg and not title:
        return str(msg)
    if title and not msg:
        return str(title)
    return None

def diropenbox(msg=None, title=None, default=None):
    title = getFileDialogTitle(msg, title)
    localRoot = tk.Tk()
    localRoot.withdraw()
    localRoot.lift()
    localRoot.attributes('-topmost', 1)
    localRoot.attributes('-topmost', 0)
    if not default:
        default = None
    localRoot.update()
    f = tk_FileDialog.askdirectory(parent=localRoot, title=title, initialdir=default, initialfile=None)
    localRoot.destroy()
    if not f:
        return None
    return os.path.normpath(f)

def main() -> None:
    path_var: bool = False

    for i in path_list:
        try:
            with open(i + "\\LeagueClient.exe", "r") as f:
                f.encoding
                path_var = True
                path = i
                break
        except FileNotFoundError:
            continue 
    
    if path_var is False:
        try:
            with open("folder\\path.txt", "r", encoding="utf-8") as f:
                path = str(f.read())
                path_var = True
        except FileNotFoundError:
            path_var = False
    
    if path_var is False:
        print(color.BOLD + color.OKGREEN + "[+] League of Legends'in Kurulu Klasörünü Seç" + color.ENDC)
        path = diropenbox("League of Legends'in Kurulu Klasörünü Seç", "R3nzTheCodeGOD")
        with open("folder\\path.txt", "w", encoding="utf-8") as f:
            f.write(path)

    try:
        # Client Copy
        print(color.OKBLUE + "[+] Clientler Kopyalanıyor..." + color.ENDC)
        shutil.copy("folder/LeagueClient.exe", path)
        shutil.copy("folder/LeagueClientUX.exe", path)
        # Plugin Copy
        print(color.OKBLUE + "[+] Plugin-Manifest Kopyalanıyor..." + color.ENDC)
        shutil.copy("folder/plugin-manifest.json", path + "\Plugins")
        # Assets Copy
        print(color.OKBLUE + "[+] Assets.wad Kopyalanıyor..." + color.ENDC)
        shutil.copy("folder/assets.wad", path + "\Plugins\\rcp-fe-lol-champ-select")
        # Run Process LOL
        print(color.OKGREEN + "[+] League Of Legends Başlatılıyor..." + color.ENDC)
        subprocess.Popen([path + '\LeagueClient.exe', '--allow-multiple-clients', '--legacy-SSL', '--no-proxy'])
    except Exception as err:
        print(color.FAIL + f"[-] Hata: {err}" + color.ENDC)
        time.sleep(5)
        exit()

if __name__ == "__main__":
    os.system("@echo off")
    os.system("cls")
    start: float = time.perf_counter()
    path: str = ""
    path_list: list = [
        "C:\\Riot Games\\League of Legends", "C:\\Program Files (x86)\\Riot Games\\League of Legends", "C:\\Program Files\\Riot Games\\League of Legends",
        "D:\\Riot Games\\League of Legends", "D:\\Program Files (x86)\\Riot Games\\League of Legends", "D:\\Program Files\\Riot Games\\League of Legends",
        "E:\\Riot Games\\League of Legends", "E:\\Program Files (x86)\\Riot Games\\League of Legends", "E:\\Program Files\\Riot Games\\League of Legends",
        ]
    print(color.BOLD + color.OKGREEN + f"""
     ____  _____           _____ _           ____          _       ____  ___  ____  
    |  _ \|___ / _ __  ___|_   _| |__   ___ / ___|___   __| | ___ / ___|/ _ \|  _ \ 
    | |_) | |_ \| '_ \|_  / | | | '_ \ / _ \ |   / _ \ / _` |/ _ \ |  _| | | | | | |
    |  _ < ___) | | | |/ /  | | | | | |  __/ |__| (_) | (_| |  __/ |_| | |_| | |_| |
    |_| \_\____/|_| |_/___| |_| |_| |_|\___|\____\___/ \__,_|\___|\____|\___/|____/

                    {color.OKCYAN + "GitHub: https://github.com/R3nzTheCodeGOD" + color.ENDC}""")
    main()
    stop: float = time.perf_counter()
    print(color.OKBLUE + f"[+] İşlem {round(stop - start, 2)} saniye sürdü...")
    time.sleep(3)
